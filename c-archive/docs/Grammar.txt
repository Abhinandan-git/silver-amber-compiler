PROGRAM -> STATEMENTS
STATEMENTS -> STATEMENT STATEMENTS
STATEMENTS -> ''

STATEMENT -> FOR_LOOP
STATEMENT -> IF_STMT
STATEMENT -> FUNC_DEF
STATEMENT -> FUNC_CALL
STATEMENT -> EXPR
STATEMENT -> COND
STATEMENT -> ASSGNMT

FOR_LOOP -> for ( IDENTIFIER from OPRD to OPRD by OPRD ) BLOCK
IF_STMT -> if ( COND ) BLOCK
FUNC_DEF -> function IDENTIFIER ( ARGS ) BLOCK
FUNC_CALL -> IDENTIFIER ( ARGS )

ARGS -> IDENTIFIER ARGS
ARGS -> ''

BLOCK -> { STATEMENTS }

COND -> EXPR COND_OPR EXPR

EXPR -> OPRD EXPR'
EXPR' -> OPR OPRD EXPR'
EXPR' -> ''

OPRD -> LITERAL
OPRD -> IDENTIFIER

COND_OPR -> lt
COND_OPR -> gt
COND_OPR -> le
COND_OPR -> ge
COND_OPR -> eq
COND_OPR -> ne

OPR -> +
OPR -> -
OPR -> *
OPR -> /
OPR -> %

ASSGNMT -> IDENTIFIER = EXPR